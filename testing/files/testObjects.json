{
  "events": {
    "eventOne":{
      "event": "test_1",
      "payload": {
        "property": "test_1",
        "nestedProperty": {
          "more": "really nested"
        }
      }
    },
    "eventTwo":{
      "event": "test_2"
    }
  },
  "eps": {
    "epOne": {
      "id":"epOne",
      "lang":"0",
      "data":"\n#\n# EmailYak EVENT POLLER\n#\n# Requires user params:\n#  - apikey: The user's EmailYak API key\n#\n\nurl = 'https://api.emailyak.com/v1/' + params.apikey + '/json/get/new/email/'\n\nexports.newMail = ( pushEvent ) ->\n    needle.get url, ( err, resp, body ) ->\n        if not err and resp.statusCode is 200\n            mails = JSON.parse( body ).Emails\n            pushEvent mail for mail in mails\n        else\n            log.error 'Error in EmailYak EM newMail: ' + err.message\n\n",
      "public":"false",
      "params":"[\"apikey\"]",
      "functions":"[\"newMail\"]"
    },
    "epTwo": {
      "id":"epTwo",
      "lang":"0",
      "data":"\nurl = 'https://api.emailyak.com/v1/' + params.firstparam + '/json/get/new/email/'\n\nexports.newEvent = ( pushEvent ) ->\n    needle.get url, ( err, resp, body ) ->\n        if not err and resp.statusCode is 200\n            mails = JSON.parse( body ).Emails\n            pushEvent mail for mail in mails\n        else\n            log.error 'Error in EmailYak EM newMail: ' + err.message\n\nexports.randomNess = ( pushEvent ) ->\n    console.log 'test runs: ' + params.secondparam\n",
      "public":"true",
      "params":"[\"firstparam\",\"secondparam\"]",
      "functions":"[\"newEvent\",\"randomNess\"]"
    }
  },
  "rules": {
    "ruleOne": {
      "id": "ruleOne_id",
      "event": "custom-test-1",
      "conditions": {
        "property": "yourValue"
      },
      "actions": []
    },
    "ruleTwo": {
      "id": "ruleTwo_id",
      "event": "custom-test-2",
      "conditions": {
        "property": "yourValue2"
      },
      "actions": []
    }
  },
  "users": {
    "userOne": {
      "username": "tester-1",
      "password": "password-1"
    },
    "userTwo": {
      "username": "tester-2",
      "password": "password-2"
    },
    "userAdmin": {
      "username": "tester-admin",
      "password": "password-admin",
      "roles": [ "admin" ],
      "isAdmin": true
    }
  }

}